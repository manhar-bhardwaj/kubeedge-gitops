# workload.yaml - NO SECRETS HARDCODED
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: code-storage
  namespace: edge-pi-2
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: parsing-service
  namespace: edge-pi-2
  labels:
    app: parsing-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: parsing-service
  template:
    metadata:
      labels:
        app: parsing-service
      annotations:
        deployment.version: "v4"
    spec:
      automountServiceAccountToken: false
      hostNetwork: true
      nodeSelector:
        kubernetes.io/hostname: 00000000cf62c74b-iot-pi

      initContainers:
      - name: git-clone
        image: alpine/git:latest
        command: ['sh', '-c']
        args:
          - |
            echo "Starting code sync..."
            
            # Setup git credentials
            git config --global credential.helper store
            echo "https://${GIT_USER}:${GIT_PASS}@github.com" > ~/.git-credentials
            
            # Your PRIVATE repository
            REPO_URL="https://github.com/NowPurchase/Arsenal.git"
            
            # Clean start (remove this section after first successful clone)
            rm -rf /code/repo /code/app
            
            # Clone repository
            echo "Cloning repository..."
            git clone $REPO_URL /code/repo || exit 1
            
            # Copy to app directory
            mkdir -p /code/app
            cp -r /code/repo/* /code/app/
            
            echo "Code sync complete!"

        env:
        - name: GIT_USER
          valueFrom:
            secretKeyRef:
              name: git-credentials
              key: username
        - name: GIT_PASS
          valueFrom:
            secretKeyRef:
              name: git-credentials
              key: password

        volumeMounts:
        - name: code-volume
          mountPath: /code

      containers:
      - name: fastapi-app
        image: ghcr.io/manhar400/my-app-image:1.0
        imagePullPolicy: IfNotPresent
        args: ["--port", "8890"]
        ports:
        - containerPort: 8890

        volumeMounts:
        - name: code-volume
          mountPath: /app/dynamic-code
          subPath: app

        env:
        - name: PYTHONPATH
          value: "/app/dynamic-code:/app"

      volumes:
      - name: code-volume
        persistentVolumeClaim:
          claimName: code-storage